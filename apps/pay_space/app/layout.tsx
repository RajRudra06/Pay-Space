import type { Metadata } from "next";
import "./globals.css";
import Providers from "@pay_space/providers";
import { Toaster } from "react-hot-toast";
import NavBar from "./components/NavBar";
import SessionLayout from "./components/sessionLayout";
// ðŸ§  Import Fonts from next/font/google
import {
  Inter,
  Poppins,
  Manrope,
  DM_Sans,
  Urbanist,
  Nunito,
  Rubik,
  Outfit,
  Mulish,
  Karla,
  Lato,
  Open_Sans,
  Work_Sans,
  Raleway,
  Source_Sans_3,
  Fira_Sans,
  Noto_Sans,
  IBM_Plex_Sans,
  Quicksand,
  PT_Sans,
} from "next/font/google";

// ðŸ§  Configure Each Font with Weights + Variable
const inter = Inter({ subsets: ["latin"], variable: "--font-inter" });
const poppins = Poppins({ subsets: ["latin"], weight: ["400", "600", "700"], variable: "--font-poppins" });
const manrope = Manrope({ subsets: ["latin"], weight: ["400", "600", "700"], variable: "--font-manrope" });
const dmSans = DM_Sans({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-dm-sans" });
const urbanist = Urbanist({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-urbanist" });
const nunito = Nunito({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-nunito" });
const rubik = Rubik({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-rubik" });
const outfit = Outfit({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-outfit" });
const mulish = Mulish({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-mulish" });
const karla = Karla({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-karla" });
const lato = Lato({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-lato" });
const openSans = Open_Sans({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-open-sans" });
const workSans = Work_Sans({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-work-sans" });
const raleway = Raleway({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-raleway" });
const sourceSans = Source_Sans_3({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-source-sans" });
const firaSans = Fira_Sans({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-fira-sans" });
const notoSans = Noto_Sans({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-noto-sans" });
const ibmPlexSans = IBM_Plex_Sans({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-ibm-plex-sans" });
const quicksand = Quicksand({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-quicksand" });
const ptSans = PT_Sans({ subsets: ["latin"], weight: ["400", "700"], variable: "--font-pt-sans" });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en">
      <body
        className={`bg-gray-50
          ${inter.variable}
          ${poppins.variable}
          ${manrope.variable}
          ${dmSans.variable}
          ${urbanist.variable}
          ${nunito.variable}
          ${rubik.variable}
          ${outfit.variable}
          ${mulish.variable}
          ${karla.variable}
          ${lato.variable}
          ${openSans.variable}
          ${workSans.variable}
          ${raleway.variable}
          ${sourceSans.variable}
          ${firaSans.variable}
          ${notoSans.variable}
          ${ibmPlexSans.variable}
          ${quicksand.variable}
          ${ptSans.variable}
        `}
      >
        <Toaster position="bottom-right" />
        
        <Providers>
          <SessionLayout>
            {children}
          </SessionLayout>
        </Providers>
      </body>
    </html>
  );
}

// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import  Providers  from "@pay_space/providers";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({children}: Readonly<{children: React.ReactNode;}>) {
//   return (
//     <html lang="en">
//       <head>
//       <link
//           href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap"
//           rel="stylesheet"
//         />
//       </head>
//         <Providers>
//       <body className={`${geistSans.variable} ${geistMono.variable}`}>
//           {children}
//       </body>
//       </Providers>
//     </html>
//   );
// }
